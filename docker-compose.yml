version: '3.8'
services:
  app:
    build:
      context: .
    container_name: bookinline-backend
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    environment:
      SPRING_PROFILE: docker
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET: ${AWS_BUCKET}
      POSTGRES_DOCKER_URL: ${POSTGRES_PROD_URL}
      POSTGRES_DOCKER_USER: ${POSTGRES_PROD_USER}
      POSTGRES_DOCKER_PASSWORD: ${POSTGRES_PROD_PASSWORD}
      REDIS_DOCKER_HOST: ${REDIS_PROD_HOST}
    networks:
      - app-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-net

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: bookinline
      POSTGRES_USER: ${POSTGRES_DOCKER_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DOCKER_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app-net

networks:
  app-net: